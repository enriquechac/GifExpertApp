{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GiftGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGisfs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAmCeA,EAhCK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cACnB,GADiD,iBACbC,mBAAS,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,QCWhBG,G,KAbM,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC/B,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,S,uBCTHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAClDF,GAFe,+DAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAXtB,kBAeZY,GAfY,4CAAH,sDC2BLK,EApBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SACf,ECLyB,SAACA,GAC1B,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAACP,GACpBK,EAAS,CACLT,KAAMI,EACNG,SAAS,SAGlB,CAACb,IAEGc,EDV2BI,CAAclB,GAAlCU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKb,IACJa,GAAW,2CACZ,qBAAKjB,UAAU,YAAf,SACKc,EAAOF,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA+BA,GAAZA,EAAIhB,aEU5B0B,EAtBM,WAGjB,MAAoCxC,mBAAS,CAAC,UAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,gCACI,8CACA,qEACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BACK0C,EAAWZ,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCblCqB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,U","file":"static/js/main.99b044c0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories, ...props }) => {\r\n    const [inputValue, setImputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setImputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((cats) => [inputValue, ...cats]);\r\n            setImputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../index.css';\r\n\r\nconst GiftGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInLeft\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nGiftGridItem.propTypes = {\r\n    id: PropTypes.string,\r\n};\r\n\r\nexport default GiftGridItem;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n        category\r\n    )}&limit=10&api_key=Jl0PWummXq3LsgmjnVz1wNWcF363ncyU`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\nimport '../index.css';\r\nimport { useFetchGisfs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGisfs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => (\r\n                    <GiftGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGisfs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((images) => {\r\n            setState({\r\n                data: images,\r\n                loading: false,\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Sanurai x', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['Hola!']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <h4>Ingresa palabras para buscar gif...</h4>\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr />\r\n\r\n            <ol>\r\n                {categories.map((category) => (\r\n                    <GifGrid key={category} category={category} />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}